{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":85723,"databundleVersionId":10652996,"sourceType":"competition"}],"dockerImageVersionId":30886,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom datetime import datetime\n\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:08.215339Z","iopub.execute_input":"2025-02-15T10:24:08.215691Z","iopub.status.idle":"2025-02-15T10:24:08.227280Z","shell.execute_reply.started":"2025-02-15T10:24:08.215658Z","shell.execute_reply":"2025-02-15T10:24:08.225591Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"train_df = pd.read_csv('/kaggle/input/playground-series-s5e1/train.csv')\ntest_df = pd.read_csv('/kaggle/input/playground-series-s5e1/test.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:08.228922Z","iopub.execute_input":"2025-02-15T10:24:08.229390Z","iopub.status.idle":"2025-02-15T10:24:08.548481Z","shell.execute_reply.started":"2025-02-15T10:24:08.229348Z","shell.execute_reply":"2025-02-15T10:24:08.547268Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"train_df.sample(20)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:08.550436Z","iopub.execute_input":"2025-02-15T10:24:08.550839Z","iopub.status.idle":"2025-02-15T10:24:08.573659Z","shell.execute_reply.started":"2025-02-15T10:24:08.550797Z","shell.execute_reply":"2025-02-15T10:24:08.572393Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"train_df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:08.575343Z","iopub.execute_input":"2025-02-15T10:24:08.575643Z","iopub.status.idle":"2025-02-15T10:24:08.598586Z","shell.execute_reply.started":"2025-02-15T10:24:08.575615Z","shell.execute_reply":"2025-02-15T10:24:08.597102Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"train_df.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:08.599792Z","iopub.execute_input":"2025-02-15T10:24:08.600121Z","iopub.status.idle":"2025-02-15T10:24:08.676874Z","shell.execute_reply.started":"2025-02-15T10:24:08.600091Z","shell.execute_reply":"2025-02-15T10:24:08.675743Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# check the total country participated in this sticker sales\ntrain_df['country'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:08.677942Z","iopub.execute_input":"2025-02-15T10:24:08.678281Z","iopub.status.idle":"2025-02-15T10:24:08.701195Z","shell.execute_reply.started":"2025-02-15T10:24:08.678254Z","shell.execute_reply":"2025-02-15T10:24:08.699961Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"train_df['country'].value_counts().plot(kind=\"pie\", autopct = \"%.2f\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:08.704532Z","iopub.execute_input":"2025-02-15T10:24:08.704968Z","iopub.status.idle":"2025-02-15T10:24:08.877530Z","shell.execute_reply.started":"2025-02-15T10:24:08.704935Z","shell.execute_reply":"2025-02-15T10:24:08.876426Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# check the date columns\ntrain_df['date'].value_counts()\ntrain_df['date'].nunique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:08.878891Z","iopub.execute_input":"2025-02-15T10:24:08.879294Z","iopub.status.idle":"2025-02-15T10:24:08.918550Z","shell.execute_reply.started":"2025-02-15T10:24:08.879264Z","shell.execute_reply":"2025-02-15T10:24:08.917180Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# we extract the year from the date columns for train data.\ndate_list = train_df['date']\ntrain_years = [datetime.strptime(date, \"%Y-%m-%d\").year for date in date_list]\n\n# for text data\ndate_list = test_df['date']\ntest_years = [datetime.strptime(date, \"%Y-%m-%d\").year for date in date_list]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:08.919664Z","iopub.execute_input":"2025-02-15T10:24:08.920047Z","iopub.status.idle":"2025-02-15T10:24:11.315030Z","shell.execute_reply.started":"2025-02-15T10:24:08.919976Z","shell.execute_reply":"2025-02-15T10:24:11.313904Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# check unique number in years\n\nunique_years = set(years)\nunique_years","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:11.316058Z","iopub.execute_input":"2025-02-15T10:24:11.316330Z","iopub.status.idle":"2025-02-15T10:24:11.325387Z","shell.execute_reply.started":"2025-02-15T10:24:11.316306Z","shell.execute_reply":"2025-02-15T10:24:11.324102Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"## change the columns date to years\n\ntrain_df['date'] = train_years\n\n## change the columns name from date to years\ntrain_df.rename(columns={'date':'year'})\n\n\n\n## for test data\ntest_df['date'] = test_years\n\n## change the columns name from date to years\ntest_df.rename(columns={'date':'year'})","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:11.326402Z","iopub.execute_input":"2025-02-15T10:24:11.326771Z","iopub.status.idle":"2025-02-15T10:24:11.464997Z","shell.execute_reply.started":"2025-02-15T10:24:11.326742Z","shell.execute_reply":"2025-02-15T10:24:11.463850Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"## check the store columns\ntrain_df.store.unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:11.466231Z","iopub.execute_input":"2025-02-15T10:24:11.466702Z","iopub.status.idle":"2025-02-15T10:24:11.489478Z","shell.execute_reply.started":"2025-02-15T10:24:11.466659Z","shell.execute_reply":"2025-02-15T10:24:11.487750Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# data conversion from categorical to numerical using label encoder\n\nfrom sklearn.preprocessing import LabelEncoder\n\n\ndef train_convert(col_name):\n    LE = LabelEncoder()\n    train_df[col_name] = LE.fit_transform(train_df[col_name])\n    \ndef test_convert(col_name):\n    LE = LabelEncoder()\n    test_df[col_name] = LE.fit_transform(test_df[col_name])\n\ntrain_col = train_df.select_dtypes(include = 'object').columns\ntest_col = test_df.select_dtypes(include = 'object').columns\n\nfor i in train_col:\n    train_convert(i)\n\nfor i in test_col:\n    test_convert(i)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:26:57.294494Z","iopub.execute_input":"2025-02-15T10:26:57.294911Z","iopub.status.idle":"2025-02-15T10:26:57.360846Z","shell.execute_reply.started":"2025-02-15T10:26:57.294879Z","shell.execute_reply":"2025-02-15T10:26:57.359541Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"train_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:29:38.880512Z","iopub.execute_input":"2025-02-15T10:29:38.880878Z","iopub.status.idle":"2025-02-15T10:29:38.894588Z","shell.execute_reply.started":"2025-02-15T10:29:38.880848Z","shell.execute_reply":"2025-02-15T10:29:38.893044Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# remove the id columns because it has unique value and high variance\ntrain_df.drop('id', axis = 1, inplace=True)\nid_no = test_df['id']\ntest_df = test_df.drop('id', axis = 1)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:31:38.430836Z","iopub.execute_input":"2025-02-15T10:31:38.431267Z","iopub.status.idle":"2025-02-15T10:31:38.445196Z","shell.execute_reply.started":"2025-02-15T10:31:38.431235Z","shell.execute_reply":"2025-02-15T10:31:38.443751Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# check the missing value for train data\ntrain_df.isnull().sum()\n\n# check the missing value for test data\ntest_df.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:32:17.618643Z","iopub.execute_input":"2025-02-15T10:32:17.619063Z","iopub.status.idle":"2025-02-15T10:32:17.630967Z","shell.execute_reply.started":"2025-02-15T10:32:17.619009Z","shell.execute_reply":"2025-02-15T10:32:17.629672Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# we found that num_sold contains many missing value we have to fill using median\n\ntrain_df['num_sold'] = train_df['num_sold'].fillna(train_df['num_sold'].median())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:24:11.657529Z","iopub.execute_input":"2025-02-15T10:24:11.657851Z","iopub.status.idle":"2025-02-15T10:24:11.679082Z","shell.execute_reply.started":"2025-02-15T10:24:11.657823Z","shell.execute_reply":"2025-02-15T10:24:11.677664Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Model development regression model","metadata":{}},{"cell_type":"code","source":"# import the necessary packages\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso\nfrom sklearn.preprocessing import StandardScaler\n\n\n# divde the data into dependend and independent columns\nX_train = train_df.drop('num_sold',axis = 1)\ny_train = train_df['num_sold']\n\nX_test = test_df\n\n# Standardize the features (important for regularization models)\nscaler = StandardScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.fit_transform(X_test)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:37:00.038870Z","iopub.execute_input":"2025-02-15T10:37:00.039294Z","iopub.status.idle":"2025-02-15T10:37:00.112476Z","shell.execute_reply.started":"2025-02-15T10:37:00.039263Z","shell.execute_reply":"2025-02-15T10:37:00.111368Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Train the model\n\nmodel = Ridge(alpha= 1.0)\nmodel.fit(X_train_scaled, y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:37:43.827728Z","iopub.execute_input":"2025-02-15T10:37:43.828150Z","iopub.status.idle":"2025-02-15T10:37:43.882008Z","shell.execute_reply.started":"2025-02-15T10:37:43.828116Z","shell.execute_reply":"2025-02-15T10:37:43.880780Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Make prediction on the test set\ny_pred = model.predict(X_test_scaled)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:38:13.762415Z","iopub.execute_input":"2025-02-15T10:38:13.762760Z","iopub.status.idle":"2025-02-15T10:38:13.771576Z","shell.execute_reply.started":"2025-02-15T10:38:13.762732Z","shell.execute_reply":"2025-02-15T10:38:13.770220Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"submission = pd.DataFrame({\n    'id': id_no,\n    'num_sold': y_pred\n})\n\n# Save the submission file\nsubmission.to_csv('submission.csv', index=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-15T10:41:33.494560Z","iopub.execute_input":"2025-02-15T10:41:33.494919Z","iopub.status.idle":"2025-02-15T10:41:33.703656Z","shell.execute_reply.started":"2025-02-15T10:41:33.494891Z","shell.execute_reply":"2025-02-15T10:41:33.702494Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}